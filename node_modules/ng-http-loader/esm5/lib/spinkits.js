/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/*
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
import { SkChasingDotsComponent } from './components/sk-chasing-dots/sk-chasing-dots.component';
import { SkCubeGridComponent } from './components/sk-cube-grid/sk-cube-grid.component';
import { SkDoubleBounceComponent } from './components/sk-double-bounce/sk-double-bounce.component';
import { SkRotatingPlaneComponent } from './components/sk-rotating-plane/sk-rotating-plane.component';
import { SkSpinnerPulseComponent } from './components/sk-spinner-pulse/sk-spinner-pulse.component';
import { SkThreeBounceComponent } from './components/sk-three-bounce/sk-three-bounce.component';
import { SkWanderingCubesComponent } from './components/sk-wandering-cubes/sk-wandering-cubes.component';
import { SkWaveComponent } from './components/sk-wave/sk-wave.component';
export var /** @type {?} */ Spinkit = {
    skChasingDots: 'sk-chasing-dots',
    skCubeGrid: 'sk-cube-grid',
    skDoubleBounce: 'sk-double-bounce',
    skRotatingPlane: 'sk-rotationg-plane',
    skSpinnerPulse: 'sk-spinner-pulse',
    skThreeBounce: 'sk-three-bounce',
    skWanderingCubes: 'sk-wandering-cubes',
    skWave: 'sk-wave',
};
export var /** @type {?} */ SPINKIT_COMPONENTS = [
    SkCubeGridComponent,
    SkChasingDotsComponent,
    SkDoubleBounceComponent,
    SkRotatingPlaneComponent,
    SkSpinnerPulseComponent,
    SkThreeBounceComponent,
    SkWanderingCubesComponent,
    SkWaveComponent,
];

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BpbmtpdHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1odHRwLWxvYWRlci8iLCJzb3VyY2VzIjpbImxpYi9zcGlua2l0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFTQSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUNoRyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUN2RixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwREFBMEQsQ0FBQztBQUNuRyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQztBQUN0RyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwREFBMEQsQ0FBQztBQUNuRyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUNoRyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSw4REFBOEQsQ0FBQztBQUN6RyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFFekUsTUFBTSxDQUFDLHFCQUFNLE9BQU8sR0FBRztJQUNuQixhQUFhLEVBQUUsaUJBQWlCO0lBQ2hDLFVBQVUsRUFBRSxjQUFjO0lBQzFCLGNBQWMsRUFBRSxrQkFBa0I7SUFDbEMsZUFBZSxFQUFFLG9CQUFvQjtJQUNyQyxjQUFjLEVBQUUsa0JBQWtCO0lBQ2xDLGFBQWEsRUFBRSxpQkFBaUI7SUFDaEMsZ0JBQWdCLEVBQUUsb0JBQW9CO0lBQ3RDLE1BQU0sRUFBRSxTQUFTO0NBQ3BCLENBQUM7QUFFRixNQUFNLENBQUMscUJBQU0sa0JBQWtCLEdBQUc7SUFDOUIsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0Qix1QkFBdUI7SUFDdkIsd0JBQXdCO0lBQ3hCLHVCQUF1QjtJQUN2QixzQkFBc0I7SUFDdEIseUJBQXlCO0lBQ3pCLGVBQWU7Q0FDbEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4gKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTU1xuICogRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SXG4gKiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVJcbiAqIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOXG4gKiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuICovXG5cbmltcG9ydCB7IFNrQ2hhc2luZ0RvdHNDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvc2stY2hhc2luZy1kb3RzL3NrLWNoYXNpbmctZG90cy5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2tDdWJlR3JpZENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9zay1jdWJlLWdyaWQvc2stY3ViZS1ncmlkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTa0RvdWJsZUJvdW5jZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9zay1kb3VibGUtYm91bmNlL3NrLWRvdWJsZS1ib3VuY2UuY29tcG9uZW50JztcbmltcG9ydCB7IFNrUm90YXRpbmdQbGFuZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9zay1yb3RhdGluZy1wbGFuZS9zay1yb3RhdGluZy1wbGFuZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2tTcGlubmVyUHVsc2VDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvc2stc3Bpbm5lci1wdWxzZS9zay1zcGlubmVyLXB1bHNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTa1RocmVlQm91bmNlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3NrLXRocmVlLWJvdW5jZS9zay10aHJlZS1ib3VuY2UuY29tcG9uZW50JztcbmltcG9ydCB7IFNrV2FuZGVyaW5nQ3ViZXNDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvc2std2FuZGVyaW5nLWN1YmVzL3NrLXdhbmRlcmluZy1jdWJlcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2tXYXZlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3NrLXdhdmUvc2std2F2ZS5jb21wb25lbnQnO1xuXG5leHBvcnQgY29uc3QgU3BpbmtpdCA9IHtcbiAgICBza0NoYXNpbmdEb3RzOiAnc2stY2hhc2luZy1kb3RzJyxcbiAgICBza0N1YmVHcmlkOiAnc2stY3ViZS1ncmlkJyxcbiAgICBza0RvdWJsZUJvdW5jZTogJ3NrLWRvdWJsZS1ib3VuY2UnLFxuICAgIHNrUm90YXRpbmdQbGFuZTogJ3NrLXJvdGF0aW9uZy1wbGFuZScsXG4gICAgc2tTcGlubmVyUHVsc2U6ICdzay1zcGlubmVyLXB1bHNlJyxcbiAgICBza1RocmVlQm91bmNlOiAnc2stdGhyZWUtYm91bmNlJyxcbiAgICBza1dhbmRlcmluZ0N1YmVzOiAnc2std2FuZGVyaW5nLWN1YmVzJyxcbiAgICBza1dhdmU6ICdzay13YXZlJyxcbn07XG5cbmV4cG9ydCBjb25zdCBTUElOS0lUX0NPTVBPTkVOVFMgPSBbXG4gICAgU2tDdWJlR3JpZENvbXBvbmVudCxcbiAgICBTa0NoYXNpbmdEb3RzQ29tcG9uZW50LFxuICAgIFNrRG91YmxlQm91bmNlQ29tcG9uZW50LFxuICAgIFNrUm90YXRpbmdQbGFuZUNvbXBvbmVudCxcbiAgICBTa1NwaW5uZXJQdWxzZUNvbXBvbmVudCxcbiAgICBTa1RocmVlQm91bmNlQ29tcG9uZW50LFxuICAgIFNrV2FuZGVyaW5nQ3ViZXNDb21wb25lbnQsXG4gICAgU2tXYXZlQ29tcG9uZW50LFxuXTtcbiJdfQ==